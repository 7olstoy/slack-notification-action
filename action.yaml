name: 'Slack notification with mention'
description: 'Send alert to slack and mention a user'
author: "Dmitry Tolstoy <@7olstoy>"
branding:
  icon: "bell"
  color: "purple"
inputs:
  slack-url:
    description: 'Slack URL for webhook'
    required: true
  slack-oauth-token:
    description: 'Slack token for users mention'
    required: false
outputs:
  git-email:
    description: "Email of committed person"
    value: ${{ steps.committed-email-generator.outputs.email }}
  slack-username:
    description: "Slack username of committed person"
    value: ${{ steps.slack-username-generator.outputs.username }}
runs:
  using: "composite"
  steps:
    - name: Check email of committed person
      shell: bash
      id: committed-email-generator
      run: |
        email=$(git log -1 --pretty=format:"%ce" $GITHUB_SHA)
        echo "::set-output name=email::${email}"

    - name: Check slack username with email
      shell: bash
      id: slack-username-generator
      run: |
        username=$(curl -s --no-progress-meter "https://slack.com/api/users.lookupByEmail?token=${{ inputs.slack-oauth-token }}&email=${{ steps.committed-email-generator.outputs.email }}" | jq -r '.user.name')
        echo "::set-output name=username::${username}"

    - name: Alert with/without mention
      shell: bash
      run: |
        if [[ -z "${{ steps.slack-username-generator.outputs.username }}" || "${{ steps.slack-username-generator.outputs.username }}" == "null" ]]; then
          curl -s --no-progress-bar -X POST "${{ inputs.slack-url }}" -H 'Content-type: application/json' --data @- << EOF
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": ":alert: Job failed ($GITHUB_JOB) :alert:",
                  "emoji": true
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "• *Repo*: $GITHUB_REPOSITORY \n• *Git branch*: $GITHUB_REF \n• *Run*: $GITHUB_RUN_NUMBER \n• *Accused*: $GITHUB_ACTOR"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Github runner log>"
                  }
                ]
              },
              {
                "type": "divider"
              }
            ]
          }
        EOF
        else
          curl -X POST "${{ inputs.slack-url }}" -H 'Content-type: application/json' --data @- << EOF
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": ":alert: Job failed ($GITHUB_JOB) :alert:",
                  "emoji": true
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "• *Repo*: $GITHUB_REPOSITORY \n• *Git branch*: $GITHUB_REF \n• *Run*: $GITHUB_RUN_NUMBER \n• *Accused*: $GITHUB_ACTOR (@${{ steps.slack-username-generator.outputs.username }})"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Github runner log>"
                  }
                ]
              },
              {
                "type": "divider"
              }
            ]
          }
        EOF
        fi
